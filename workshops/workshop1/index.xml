<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Workshop1 on Showcase Template</title><link>https://visualcomputing.github.io/showcase/workshops/workshop1/</link><description>Recent content in Workshop1 on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 02 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://visualcomputing.github.io/showcase/workshops/workshop1/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://visualcomputing.github.io/showcase/workshops/workshop1/workshop_1/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/workshops/workshop1/workshop_1/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title/><link>https://visualcomputing.github.io/showcase/workshops/workshop1/stereokinetic_effect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/workshops/workshop1/stereokinetic_effect/</guid><description>Stereokinetic Effect # p5-instance-div markdown const frame_rate = 60; function setup() { createCanvas(500, 500); frameRate(frame_rate); } function draw() { background(220); let difference = 40; let inner_diameter = 40; const outer_circles = 11; const start = inner_diameter + outer_circles * difference; const end = inner_diameter; noStroke(); let posX = 0, posY = 0; let referenceX = width / 2; let referenceY = height / 2; for (let diameter = start, index = 0; diameter &amp;gt;= end; diameter -= difference, index++) { fill(index % 2 === 0 ?</description></item><item><title/><link>https://visualcomputing.github.io/showcase/workshops/workshop1/stroboscopic_artifacts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/workshops/workshop1/stroboscopic_artifacts/</guid><description>Stroboscopic Artifacts # p5-instance-div markdown let angle = 0; let frames; let colorp1, colorp2, colorp3; let rotation_angle; function setup() { createCanvas(500, 500); frames_slider = createSlider(5, 120, 60, 5); frames_slider.position(180, 40); frames_slider.style(&amp;#39;width&amp;#39;, &amp;#39;80px&amp;#39;); ellipseMode(CENTER); rotation_angle = createP().position(25, 5); frames = createP().position(180, 5); slider = createSlider(0, 360, 0, 5); slider.position(20, 40); slider.style(&amp;#39;width&amp;#39;, &amp;#39;80px&amp;#39;); createP(&amp;#39;Colors:&amp;#39;).position(25, 55).style(&amp;#39;font-size: 15px&amp;#39;); colorp1 = createColorPicker([0, 255, 0]).</description></item></channel></rss>