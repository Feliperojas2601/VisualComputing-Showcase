<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase Template</title><link>https://feliperojas2601.github.io/VisualComputing-Showcase/</link><description>Recent content in Introduction on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://feliperojas2601.github.io/VisualComputing-Showcase/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop1/workshop_1/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop1/workshop_1/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Creating a New Theme</title><link>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop_1/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop_1/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title/><link>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop1/moire_patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop1/moire_patterns/</guid><description>Ramp Aftereffect # a. p5-instance-div markdown let x = 0; let colorp1, colorp2; let increase = 0; function setup() { createCanvas(500, 500); rectMode(CENTER); colorp1 = createColorPicker([32, 162, 32]).position(20, 25); colorp2 = createColorPicker([0, 0, 255]).position(75, 25); slider = createSlider(0, 2, 0, 0.25); slider.position(150, 25); slider.style(&amp;#39;width&amp;#39;, &amp;#39;80px&amp;#39;); } function draw() { background(220); increase = slider.value(); for (let i = 0; i &amp;lt; 400; i += 20) { stroke(colorp2.color()); strokeWeight(4); ellipse(x, 250, i - 380, i - 380); noFill(); stroke(colorp1.</description></item><item><title/><link>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop1/stereokinetic_effect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop1/stereokinetic_effect/</guid><description>Stereokinetic Effect # El efecto estereocinético consiste en patrones circulares anidados que rotan sobre una plataforma circular. Estos círculos, al rotar alrededor de algún eje distinto de la línea de visión de quien los observa, permiten extraer la configuración tridimensional del patrón, debido a varias transformaciones ópticas que se producen. En el ejemplo siguiente, podemos observar cómo al hacer rotar varios círculos externos sobre el eje de la plataforma circular, y círculos internos sobre un círculo interno intermedio, en sentido contrario, se puede apreciar una ilusión de un objeto tridimensional, y apreciar profundidad mediante los círculos internos.</description></item><item><title/><link>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop1/stroboscopic_artifacts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://feliperojas2601.github.io/VisualComputing-Showcase/workshops/workshop1/stroboscopic_artifacts/</guid><description>Stroboscopic Artifacts # p5-instance-div markdown let angle = 0; let frames; let colorp1, colorp2, colorp3; let rotation_angle; function setup() { createCanvas(500, 500); frames_slider = createSlider(5, 120, 60, 5); frames_slider.position(180, 40); frames_slider.style(&amp;#39;width&amp;#39;, &amp;#39;80px&amp;#39;); ellipseMode(CENTER); rotation_angle = createP().position(25, 5); frames = createP().position(180, 5); slider = createSlider(0, 360, 0, 5); slider.position(20, 40); slider.style(&amp;#39;width&amp;#39;, &amp;#39;80px&amp;#39;); createP(&amp;#39;Colors:&amp;#39;).position(25, 55).style(&amp;#39;font-size: 15px&amp;#39;); colorp1 = createColorPicker([0, 255, 0]).position(20, 95); colorp2 = createColorPicker([0, 0, 255]).position(20, 135); colorp3 = createColorPicker([255, 0, 0]).</description></item></channel></rss>